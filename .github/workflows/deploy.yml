name: CI/CD â€” Build & Deploy to EC2

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build and push Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-cicd-demo:latest

  deploy:
    name: Deploy to EC2 via SSH
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          timeout: 300
          script: |
            # Ensure Docker is installed (install if missing)
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
            fi

            # Pull latest image from Docker Hub
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-cicd-demo:latest

            # Stop & remove old container (if exists)
            sudo docker stop fastapi || true
            sudo docker rm fastapi || true

            # Run the new container
            sudo docker run -d \
              --name fastapi \
              -p 8000:8000 \
              --restart always \
              ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-cicd-demo:latest

            # Print status
            sudo docker ps -a
